{"version":3,"sources":["asserts/colorList.js","App.js","asserts/uniqueID.js","asserts/getColor.js","index.js"],"names":["colorList","App","useState","task","setTask","JSON","parse","localStorage","getItem","tasks","setTasks","useEffect","setItem","stringify","setTaskToState","trim","id","Date","now","color","Math","round","random","length","defaultPosition","x","y","isComplete","isWarrning","alert","className","map","grid","onStop","_","data","createUpdatePosition","updatePosition","style","backgroundColor","onClick","createCompleteTasks","onClickCompleteTask","title","createWarningTasks","onClickWarningTask","filter","type","value","placeholder","onChange","e","target","onKeyPress","key","keyPressOnInput","ReactDOM","render","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.b0e27831.chunk.js","sourcesContent":["export const colorList = [\r\n    '#A2C523', \r\n    '#C6D166', \r\n    '#6FB98F', \r\n    '#7DA3A1', \r\n    '#4CB5F5', \r\n    '#B7B8B6', \r\n    '#B3C100', \r\n    '#68A225', \r\n    '#EB8A44', \r\n    '#F9DC24', \r\n    '#EE693F', \r\n    '#F69454', \r\n    '#C7DB00', \r\n    '#7AA802', \r\n    '#F78B2D', \r\n    '#E4B600', \r\n    '#EBDF00', \r\n    '#B38540', \r\n    '#F79B77', \r\n    '#D4DDE1', \r\n    '#AA4B41', \r\n    '#90AFC5', \r\n    '#336B87', \r\n    '#F34A4A', \r\n    '#1B4B5A', \r\n    '#217CA3', \r\n    '#E29930', \r\n    '#FB6542', \r\n    '#375E97', \r\n    '#80BD9E', \r\n    '#FF420E', \r\n    '#F98866', \r\n    '#89DA59', \r\n    '#F52549', \r\n    '#FA6775', \r\n    '#9BC01C', \r\n    '#CB6318', \r\n    '#CF3721', \r\n    '#31A9B8', \r\n    '#258039', \r\n    '#344D90', \r\n    '#F25C00', \r\n    '#F9A603', \r\n    '#4897D8', \r\n    '#D13525', \r\n    '#486824', \r\n    '#F2C057', \r\n    '#E73F0B', \r\n    '#BBCF4A', \r\n    '#F56C57', \r\n    '#F77604', \r\n    '#B38867', \r\n    '#FFEC5C', \r\n    '#E1315B', \r\n    '#008DCB', \r\n    '#00CFFA', \r\n    '#FFB745', \r\n    '#E7552C', \r\n    '#138D90', \r\n    '#DDBC95', \r\n    '#CDAB81', \r\n    '#98DBC6', \r\n    '#E6D72A', \r\n    '#A0B084', \r\n]","import { useState, useEffect } from 'react';\nimport { RiErrorWarningLine } from 'react-icons/ri';\nimport { RiDeleteBin6Line } from 'react-icons/ri';\nimport { MdDone } from 'react-icons/md';\nimport Draggable from 'react-draggable';\n\nimport './App.css';\n\nimport { uniqueID } from './asserts/uniqueID';\nimport { getColor } from './asserts/getColor';\n\n\nfunction App() {\n  // Состояния котпонента\n  const [task, setTask] = useState('');\n  const [tasks, setTasks] = useState(\n    JSON.parse(localStorage.getItem('tasks')) || []\n  );\n  // Если создается новая задача, то она записывается в localStorage браузера\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks))\n  }, [tasks]);\n  // Проверка на колличество введеных знаков\n  const setValueInputToState = (value) => {\n    (task.length < 40)\n    ? setTask(value)\n    : alert(\"Слишком длинная запись!\")\n  };\n  // Создание task\n  const setTaskToState = () => {\n    if(task && task.trim()) {\n      setTasks([\n        ...tasks, \n        {\n          task,\n          id: uniqueID(),\n          color: getColor(),\n          defaultPosition: { x:0, y:0 },\n          isComplete: false,\n          isWarrning: false,\n        }        \n      ]);\n      setTask('');\n    } else {\n      alert('Введите задачу');\n      setTask('');\n    }\n  };\n  // Удаление task\n  const onClickRemoveTask = (id) => {\n    setTasks( tasks.filter((task) => task.id !== id) );\n  };\n  // Отметить task как \"важная\" \n  const onClickWarningTask = (id) => {\n    const createWarningTasks = tasks.map((task) => (\n      (task.id === id) \n      ? (task.isWarrning = !task.isWarrning) \n      : task\n    ))\n    setTasks(createWarningTasks);\n  };\n  // Отметить task как \"Выполнено\" \n  const onClickCompleteTask = (id) => {\n    const createCompleteTasks = tasks.map((task) => (\n      (task.id === id) \n      ? (task.isComplete = !task.isComplete) \n      : task\n    ))\n    setTasks(createCompleteTasks);\n  };\n  // Запоминание позиции каждой task при перемещении\n  const updatePosition = (data, id) => {\n    const createUpdatePosition = tasks.map((task) => (\n      (task.id === id) \n      ? (task.defaultPosition = { x:data.x, y:data.y }) \n      : task\n    ))\n    setTasks(createUpdatePosition);\n  };\n  // Нажатием на клавишу 'Enter' добавляется новая task\n  const keyPressOnInput = (e) => {\n    e.key === 'Enter' && setTaskToState();\n  };\n  \n  return (\n    <div className=\"App\">\n      <div className=\"App__tasks\">\n        {tasks.map((task) => {\n          return (\n            <Draggable\n              key={task.id}\n              grid={[10, 10]}\n              defaultPosition={task.defaultPosition}\n              onStop={(_, data) => { updatePosition(data, task.id) }}\n            >\n              <div className=\"App__task-drag\">\n                <div \n                  style={{backgroundColor: task.color}}\n                  className={!task.isComplete \n                    ? \"App__task-title\" \n                    : \"App__task-title complete--active\"} >\n                  <p className=\"App__task-text\">{task.task}</p>\n                </div>\n                <div className=\"App__btn-group\">\n                  <button\n                    className={!task.isComplete \n                      ? \"App__btn-complete\" \n                      : \"complete-btn--active\"}\n                    onClick={() => onClickCompleteTask(task.id)}\n                    title=\"Выполнено\"\n                  >\n                    <MdDone />\n                  </button>\n                  <button\n                    className={!task.isWarrning \n                      ? \"App__btn-warning\" \n                      : \"warning-btn--active\"}\n                    onClick={() => onClickWarningTask(task.id)}\n                    title=\"Отметить как важное\"\n                  >\n                    <RiErrorWarningLine />\n                  </button>\n                  <button\n                    className=\"App__btn-remove\"\n                    onClick={() => onClickRemoveTask(task.id)}\n                    title=\"Удалить\"\n                  >\n                    <RiDeleteBin6Line />\n                  </button>\n                </div>\n              </div>\n            </Draggable>\n          )\n        })}\n      </div>\n      <div className=\"App__header\">\n        <input\n          className=\"App__input\"\n          type=\"text\"\n          value={task}\n          placeholder=\"Введите задачу...\"\n          onChange={(e) => setValueInputToState(e.target.value)}\n          onKeyPress={(e) => keyPressOnInput(e)}\n        />\n        <button\n          className=\"App__btn-set\"\n          onClick={setTaskToState}\n        >\n          Добавить\n        </button>\n      </div>\n\n        \n    </div>\n  );\n}\n\nexport default App;\n","export const uniqueID = () => { return Date.now() };","import { colorList } from './colorList'\r\n\r\nexport function getColor() {    \r\n    return colorList[Math.round(Math.random() * (colorList.length-1))]\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);"],"sourceRoot":""}